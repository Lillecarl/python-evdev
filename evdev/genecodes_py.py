import sys
from unittest import mock
from pprint import PrettyPrinter

sys.modules["evdev.ecodes"] = mock.Mock()
from evdev import ecodes_runtime as ecodes

pprint = PrettyPrinter(indent=2, sort_dicts=True, width=120).pprint


print("# Automatically generated by evdev.genecodes_py")
print()
print('"""')
print(ecodes.__doc__.strip())
print('"""')

print()
print("from typing import Final, Dict, List, Union")
print()

for name, value in ecodes.ecodes.items():
    print(f"{name}: Final = {value}")
print()

entries = [
    ("ecodes", "Dict[str, int]",                            "#: Mapping of names to values."),
    ("bytype", "Dict[int, Dict[int, Union[str, List[str]]]]", "#: Mapping of event types to other value/name mappings."),
    ("keys",   "Dict[int, Union[str, List[str]]]",           "#: Keys are a combination of all BTN and KEY codes."),
    ("KEY",    "Dict[int, Union[str, List[str]]]", None),
    ("ABS",    "Dict[int, Union[str, List[str]]]", None),
    ("REL",    "Dict[int, Union[str, List[str]]]", None),
    ("SW",     "Dict[int, Union[str, List[str]]]", None),
    ("MSC",    "Dict[int, Union[str, List[str]]]", None),
    ("LED",    "Dict[int, Union[str, List[str]]]", None),
    ("BTN",    "Dict[int, Union[str, List[str]]]", None),
    ("REP",    "Dict[int, Union[str, List[str]]]", None),
    ("SND",    "Dict[int, Union[str, List[str]]]", None),
    ("ID",     "Dict[int, Union[str, List[str]]]", None),
    ("EV",     "Dict[int, Union[str, List[str]]]", None),
    ("BUS",    "Dict[int, Union[str, List[str]]]", None),
    ("SYN",    "Dict[int, Union[str, List[str]]]", None),
    ("FF",     "Dict[int, Union[str, List[str]]]", None),
    ("FF_STATUS",  "Dict[int, Union[str, List[str]]]", None),
    ("INPUT_PROP", "Dict[int, Union[str, List[str]]]", None)
]

for key, annotation, doc in entries:
    if doc:
        print(doc)

    print(f"{key}: {annotation} = ", end="")
    pprint(getattr(ecodes, key))
    print()
